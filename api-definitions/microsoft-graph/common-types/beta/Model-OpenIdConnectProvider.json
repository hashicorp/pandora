{
  "name": "OpenIdConnectProvider",
  "fields": [
    {
      "containsDiscriminatedTypeValue": false,
      "description": "After the OIDC provider sends an ID token back to Microsoft Entra ID, Microsoft Entra ID needs to be able to map the claims from the received token to the claims that Microsoft Entra ID recognizes and uses. This complex type captures that mapping. It's a required property.",
      "jsonName": "claimsMapping",
      "name": "ClaimsMapping",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "ClaimsMapping",
        "referenceNameIsCommonType": true
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The domain hint can be used to skip directly to the sign-in page of the specified identity provider, instead of having the user make a selection among the list of available identity providers.",
      "jsonName": "domainHint",
      "name": "DomainHint",
      "objectDefinition": {
        "type": "String",
        "nullable": true,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The URL for the metadata document of the OpenID Connect identity provider. Every OpenID Connect identity provider describes a metadata document that contains most of the information required to perform sign-in. This includes information such as the URLs to use and the location of the service's public signing keys. The OpenID Connect metadata document is always located at an endpoint that ends in a well-known/openid-configuration. For the OpenID Connect identity provider you're looking to add, you need to provide the metadata URL. It's a required property and is read only after creation.",
      "jsonName": "metadataUrl",
      "name": "MetadataUrl",
      "objectDefinition": {
        "type": "String",
        "nullable": true,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "jsonName": "responseMode",
      "name": "ResponseMode",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "OpenIdConnectResponseMode",
        "referenceNameIsCommonType": true
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "jsonName": "responseType",
      "name": "ResponseType",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "OpenIdConnectResponseTypes",
        "referenceNameIsCommonType": true
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Scope defines the information and permissions you're looking to gather from your custom identity provider. OpenID Connect requests must contain the openid scope value in order to receive the ID token from the identity provider. Without the ID token, users aren't able to sign in to Azure AD B2C using the custom identity provider. Other scopes can be appended separated by space. For more information about the scope limitations, see RFC6749 Section 3.3. It's a required property.",
      "jsonName": "scope",
      "name": "Scope",
      "objectDefinition": {
        "type": "String",
        "nullable": true,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    }
  ],
  "IsParent": false,
  "discriminatedParentModelName": "IdentityProvider",
  "discriminatedTypeValue": "#microsoft.graph.openIdConnectProvider",
  "typeHintIn": "ODataType"
}