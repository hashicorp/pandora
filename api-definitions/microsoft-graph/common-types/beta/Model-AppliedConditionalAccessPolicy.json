{
  "name": "AppliedConditionalAccessPolicy",
  "fields": [
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The custom authentication strength enforced in a Conditional Access policy.",
      "jsonName": "authenticationStrength",
      "name": "AuthenticationStrength",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "AuthenticationStrength",
        "referenceNameIsCommonType": true
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Refers to the conditional access policy conditions that aren't satisfied. The possible values are: none, application, users, devicePlatform, location, clientType, signInRisk, userRisk, time, deviceState, client,ipAddressSeenByAzureAD,ipAddressSeenByResourceProvider,unknownFutureValue,servicePrincipals,servicePrincipalRisk, authenticationFlows, insiderRisk . You must use the Prefer: include-unknown-enum-members request header to get the following values in this evolvable enum: servicePrincipals,servicePrincipalRisk, authenticationFlows, insiderRisk. conditionalAccessConditions is a multi-valued enumeration and the property can contain multiple values in a comma-separated list.",
      "jsonName": "conditionsNotSatisfied",
      "name": "ConditionsNotSatisfied",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "ConditionalAccessConditions",
        "referenceNameIsCommonType": true
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Refers to the conditional access policy conditions that are satisfied. The possible values are: none, application, users, devicePlatform, location, clientType, signInRisk, userRisk, time, deviceState, client,ipAddressSeenByAzureAD,ipAddressSeenByResourceProvider,unknownFutureValue,servicePrincipals,servicePrincipalRisk, authenticationFlows, insiderRisk. You must use the Prefer: include-unknown-enum-members request header to get the following values in this evolvable enum: servicePrincipals,servicePrincipalRisk, authenticationFlows, insiderRisk. conditionalAccessConditions is a multi-valued enumeration and the property can contain multiple values in a comma-separated list.",
      "jsonName": "conditionsSatisfied",
      "name": "ConditionsSatisfied",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "ConditionalAccessConditions",
        "referenceNameIsCommonType": true
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Name of the conditional access policy.",
      "jsonName": "displayName",
      "name": "DisplayName",
      "objectDefinition": {
        "type": "String",
        "nullable": true,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Refers to the grant controls enforced by the conditional access policy (example: 'Require multifactor authentication').",
      "jsonName": "enforcedGrantControls",
      "name": "EnforcedGrantControls",
      "objectDefinition": {
        "type": "List",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null,
        "nestedItem": {
          "type": "String",
          "nullable": false,
          "referenceName": null,
          "referenceNameIsCommonType": null
        }
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Refers to the session controls enforced by the conditional access policy (example: 'Require app enforced controls').",
      "jsonName": "enforcedSessionControls",
      "name": "EnforcedSessionControls",
      "objectDefinition": {
        "type": "List",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null,
        "nestedItem": {
          "type": "String",
          "nullable": false,
          "referenceName": null,
          "referenceNameIsCommonType": null
        }
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "List of key-value pairs containing each matched exclude condition in the conditional access policy. Example: [{'devicePlatform' : 'DevicePlatform'}] means the policy didn't apply, because the DevicePlatform condition was a match.",
      "jsonName": "excludeRulesSatisfied",
      "name": "ExcludeRulesSatisfied",
      "objectDefinition": {
        "type": "List",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null,
        "nestedItem": {
          "type": "Reference",
          "nullable": false,
          "referenceName": "ConditionalAccessRuleSatisfied",
          "referenceNameIsCommonType": true
        }
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Identifier of the conditional access policy.",
      "jsonName": "id",
      "name": "Id",
      "objectDefinition": {
        "type": "String",
        "nullable": true,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "List of key-value pairs containing each matched include condition in the conditional access policy. Example: [{ 'application' : 'AllApps'}, {'users': 'Group'}], meaning Application condition was a match because AllApps are included and Users condition was a match because the user was part of the included Group rule.",
      "jsonName": "includeRulesSatisfied",
      "name": "IncludeRulesSatisfied",
      "objectDefinition": {
        "type": "List",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null,
        "nestedItem": {
          "type": "Reference",
          "nullable": false,
          "referenceName": "ConditionalAccessRuleSatisfied",
          "referenceNameIsCommonType": true
        }
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The OData ID of this entity",
      "jsonName": "@odata.id",
      "name": "ODataId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The OData Type of this entity",
      "jsonName": "@odata.type",
      "name": "ODataType",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Indicates the result of the CA policy that was triggered. Possible values are: success, failure, notApplied (policy isn't applied because policy conditions weren't met), notEnabled (this is due to the policy in a disabled state), unknown, unknownFutureValue, reportOnlySuccess, reportOnlyFailure, reportOnlyNotApplied, reportOnlyInterrupted. You must use the Prefer: include-unknown-enum-members request header to get the following values in this evolvable enum: reportOnlySuccess, reportOnlyFailure, reportOnlyNotApplied, reportOnlyInterrupted.",
      "jsonName": "result",
      "name": "Result",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "AppliedConditionalAccessPolicyResult",
        "referenceNameIsCommonType": true
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Refers to the session controls that a sign-in activity didn't satisfy. (Example: Application enforced Restrictions).",
      "jsonName": "sessionControlsNotSatisfied",
      "name": "SessionControlsNotSatisfied",
      "objectDefinition": {
        "type": "List",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null,
        "nestedItem": {
          "type": "String",
          "nullable": false,
          "referenceName": null,
          "referenceNameIsCommonType": null
        }
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    }
  ],
  "IsParent": false
}