{
 "name": "TableParameterSubspace",
 "fields": [
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "booster",
   "name": "Booster",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Specify the boosting type, e.g gbdt for XGBoost."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "boostingType",
   "name": "BoostingType",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Specify the boosting type, e.g gbdt for LightGBM."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "growPolicy",
   "name": "GrowPolicy",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Specify the grow policy, which controls the way new nodes are added to the tree."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "learningRate",
   "name": "LearningRate",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "The learning rate for the training procedure."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "maxBin",
   "name": "MaxBin",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Specify the Maximum number of discrete bins to bucket continuous features ."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "maxDepth",
   "name": "MaxDepth",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Specify the max depth to limit the tree depth explicitly."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "maxLeaves",
   "name": "MaxLeaves",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Specify the max leaves to limit the tree leaves explicitly."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "minDataInLeaf",
   "name": "MinDataInLeaf",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "The minimum number of data per leaf."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "minSplitGain",
   "name": "MinSplitGain",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Minimum loss reduction required to make a further partition on a leaf node of the tree."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "modelName",
   "name": "ModelName",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "The name of the model to train."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "nEstimators",
   "name": "NEstimators",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Specify the number of trees (or rounds) in an model."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "numLeaves",
   "name": "NumLeaves",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Specify the number of leaves."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "preprocessorName",
   "name": "PreprocessorName",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "The name of the preprocessor to use."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "regAlpha",
   "name": "RegAlpha",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "L1 regularization term on weights."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "regLambda",
   "name": "RegLambda",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "L2 regularization term on weights."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "subsample",
   "name": "Subsample",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Subsample ratio of the training instance."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "subsampleFreq",
   "name": "SubsampleFreq",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Frequency of subsample"
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "treeMethod",
   "name": "TreeMethod",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Specify the tree method."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "withMean",
   "name": "WithMean",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "If true, center before scaling the data with StandardScalar."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "withStd",
   "name": "WithStd",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "If true, scaling the data with Unit Variance with StandardScalar."
  }
 ]
}