{
 "name": "NamedValueCreateContractProperties",
 "fields": [
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "displayName",
   "name": "DisplayName",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": false,
   "required": true,
   "description": "Unique name of NamedValue. It may contain only letters, digits, period, dash, and underscore characters."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "keyVault",
   "name": "KeyVault",
   "objectDefinition": {
    "type": "Reference",
    "referenceName": "KeyVaultContractCreateProperties"
   },
   "optional": true,
   "required": false,
   "description": ""
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "secret",
   "name": "Secret",
   "objectDefinition": {
    "type": "Boolean",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Determines whether the value is a secret and should be encrypted or not. Default value is false."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "tags",
   "name": "Tags",
   "objectDefinition": {
    "type": "List",
    "referenceName": null,
    "nestedItem": {
     "type": "String",
     "referenceName": null,
     "maxItems": 32
    }
   },
   "optional": true,
   "required": false,
   "description": "Optional tags that when provided can be used to filter the NamedValue list."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "value",
   "name": "Value",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Value of the NamedValue. Can contain policy expressions. It may not be empty or consist only of whitespace. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
  }
 ]
}