{
 "name": "AuthorizationServerContractProperties",
 "fields": [
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "authorizationEndpoint",
   "name": "AuthorizationEndpoint",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": false,
   "required": true,
   "description": "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "authorizationMethods",
   "name": "AuthorizationMethods",
   "objectDefinition": {
    "type": "List",
    "referenceName": null,
    "nestedItem": {
     "type": "Reference",
     "referenceName": "AuthorizationMethod"
    }
   },
   "optional": true,
   "required": false,
   "description": "HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "bearerTokenSendingMethods",
   "name": "BearerTokenSendingMethods",
   "objectDefinition": {
    "type": "List",
    "referenceName": null,
    "nestedItem": {
     "type": "Reference",
     "referenceName": "BearerTokenSendingMethod"
    }
   },
   "optional": true,
   "required": false,
   "description": "Specifies the mechanism by which access token is passed to the API. "
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "clientAuthenticationMethod",
   "name": "ClientAuthenticationMethod",
   "objectDefinition": {
    "type": "List",
    "referenceName": null,
    "nestedItem": {
     "type": "Reference",
     "referenceName": "ClientAuthenticationMethod"
    }
   },
   "optional": true,
   "required": false,
   "description": "Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "clientId",
   "name": "ClientId",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": false,
   "required": true,
   "description": "Client or app id registered with this authorization server."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "clientRegistrationEndpoint",
   "name": "ClientRegistrationEndpoint",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": false,
   "required": true,
   "description": "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "clientSecret",
   "name": "ClientSecret",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Client or app secret registered with this authorization server. This property will not be filled on 'GET' operations! Use '/listSecrets' POST request to get the value."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "defaultScope",
   "name": "DefaultScope",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "description",
   "name": "Description",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Description of the authorization server. Can contain HTML formatting tags."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "displayName",
   "name": "DisplayName",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": false,
   "required": true,
   "description": "User-friendly authorization server name."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "grantTypes",
   "name": "GrantTypes",
   "objectDefinition": {
    "type": "List",
    "referenceName": null,
    "nestedItem": {
     "type": "Reference",
     "referenceName": "GrantType"
    }
   },
   "optional": false,
   "required": true,
   "description": "Form of an authorization grant, which the client uses to request the access token."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "resourceOwnerPassword",
   "name": "ResourceOwnerPassword",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "resourceOwnerUsername",
   "name": "ResourceOwnerUsername",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "supportState",
   "name": "SupportState",
   "objectDefinition": {
    "type": "Boolean",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "tokenBodyParameters",
   "name": "TokenBodyParameters",
   "objectDefinition": {
    "type": "List",
    "referenceName": null,
    "nestedItem": {
     "type": "Reference",
     "referenceName": "TokenBodyParameterContract"
    }
   },
   "optional": true,
   "required": false,
   "description": "Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "tokenEndpoint",
   "name": "TokenEndpoint",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "OAuth token endpoint. Contains absolute URI to entity being referenced."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "useInApiDocumentation",
   "name": "UseInApiDocumentation",
   "objectDefinition": {
    "type": "Boolean",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "If true, the authorization server will be used in the API documentation in the developer portal. False by default if no value is provided."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "useInTestConsole",
   "name": "UseInTestConsole",
   "objectDefinition": {
    "type": "Boolean",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "If true, the authorization server may be used in the developer portal test console. True by default if no value is provided."
  }
 ]
}