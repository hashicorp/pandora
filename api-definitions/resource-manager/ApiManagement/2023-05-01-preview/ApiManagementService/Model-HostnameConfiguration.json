{
  "name": "HostnameConfiguration",
  "fields": [
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Certificate information.",
      "jsonName": "certificate",
      "name": "Certificate",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "CertificateInformation",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Certificate Password.",
      "jsonName": "certificatePassword",
      "name": "CertificatePassword",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Certificate Source.",
      "jsonName": "certificateSource",
      "name": "CertificateSource",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "CertificateSource",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Certificate Status.",
      "jsonName": "certificateStatus",
      "name": "CertificateStatus",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "CertificateStatus",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Specify true to setup the certificate associated with this Hostname as the Default SSL Certificate. If a client does not send the SNI header, then this will be the certificate that will be challenged. The property is useful if a service has multiple custom hostname enabled and it needs to decide on the default ssl certificate. The setting only applied to gateway Hostname Type.",
      "jsonName": "defaultSslBinding",
      "name": "DefaultSslBinding",
      "objectDefinition": {
        "type": "Boolean",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Base64 Encoded certificate.",
      "jsonName": "encodedCertificate",
      "name": "EncodedCertificate",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Hostname to configure on the Api Management service.",
      "jsonName": "hostName",
      "name": "HostName",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": false,
      "readOnly": false,
      "required": true,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "System or User Assigned Managed identity clientId as generated by Azure AD, which has GET access to the keyVault containing the SSL certificate.",
      "jsonName": "identityClientId",
      "name": "IdentityClientId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url containing version is provided, auto-update of ssl certificate will not work. This requires Api Management service to be configured with aka.ms/apimmsi. The secret should be of type *application/x-pkcs12*",
      "jsonName": "keyVaultId",
      "name": "KeyVaultId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Specify true to always negotiate client certificate on the hostname. Default Value is false.",
      "jsonName": "negotiateClientCertificate",
      "name": "NegotiateClientCertificate",
      "objectDefinition": {
        "type": "Boolean",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Hostname type.",
      "jsonName": "type",
      "name": "Type",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "HostnameType",
        "referenceNameIsCommonType": null
      },
      "optional": false,
      "readOnly": false,
      "required": true,
      "sensitive": false
    }
  ],
  "IsParent": false
}