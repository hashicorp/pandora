{
 "name": "RedirectConfiguration",
 "fields": [
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "customFragment",
   "name": "CustomFragment",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "customHost",
   "name": "CustomHost",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Host to redirect. Leave empty to use the incoming host as the destination host."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "customPath",
   "name": "CustomPath",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "customQueryString",
   "name": "CustomQueryString",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in \u003ckey\u003e=\u003cvalue\u003e format. The first ? and \u0026 will be added automatically so do not include them in the front, but do separate multiple query strings with \u0026."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "redirectProtocol",
   "name": "RedirectProtocol",
   "objectDefinition": {
    "type": "Reference",
    "referenceName": "FrontDoorRedirectProtocol"
   },
   "optional": true,
   "required": false,
   "description": "The protocol of the destination to where the traffic is redirected"
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "redirectType",
   "name": "RedirectType",
   "objectDefinition": {
    "type": "Reference",
    "referenceName": "FrontDoorRedirectType"
   },
   "optional": true,
   "required": false,
   "description": "The redirect type the rule will use when redirecting traffic."
  }
 ],
 "discriminatedParentModelName": "RouteConfiguration",
 "discriminatedTypeValue": "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration",
 "typeHintIn": "OdataType"
}