{
 "name": "MatchCondition",
 "fields": [
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "matchValue",
   "name": "MatchValue",
   "objectDefinition": {
    "type": "List",
    "referenceName": null,
    "nestedItem": {
     "type": "String",
     "referenceName": null
    }
   },
   "optional": false,
   "required": true,
   "description": "List of possible match values."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "matchVariable",
   "name": "MatchVariable",
   "objectDefinition": {
    "type": "Reference",
    "referenceName": "MatchVariable"
   },
   "optional": false,
   "required": true,
   "description": "Request variable to compare with."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "negateCondition",
   "name": "NegateCondition",
   "objectDefinition": {
    "type": "Boolean",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Describes if the result of this condition should be negated."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "operator",
   "name": "Operator",
   "objectDefinition": {
    "type": "Reference",
    "referenceName": "Operator"
   },
   "optional": false,
   "required": true,
   "description": "Comparison type to use for matching with the variable value."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "selector",
   "name": "Selector",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "transforms",
   "name": "Transforms",
   "objectDefinition": {
    "type": "List",
    "referenceName": null,
    "nestedItem": {
     "type": "Reference",
     "referenceName": "TransformType"
    }
   },
   "optional": true,
   "required": false,
   "description": "List of transforms."
  }
 ]
}