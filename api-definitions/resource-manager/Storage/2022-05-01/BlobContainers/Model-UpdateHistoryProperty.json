{
 "name": "UpdateHistoryProperty",
 "fields": [
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "allowProtectedAppendWrites",
   "name": "AllowProtectedAppendWrites",
   "objectDefinition": {
    "type": "Boolean",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "allowProtectedAppendWritesAll",
   "name": "AllowProtectedAppendWritesAll",
   "objectDefinition": {
    "type": "Boolean",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "immutabilityPeriodSinceCreationInDays",
   "name": "ImmutabilityPeriodSinceCreationInDays",
   "objectDefinition": {
    "type": "Integer",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "The immutability period for the blobs in the container since the policy creation, in days."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "objectIdentifier",
   "name": "ObjectIdentifier",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Returns the Object ID of the user who updated the ImmutabilityPolicy."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "tenantId",
   "name": "TenantId",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "timestamp",
   "name": "Timestamp",
   "objectDefinition": {
    "type": "DateTime",
    "referenceName": null,
    "dateFormat": "RFC3339"
   },
   "optional": true,
   "required": false,
   "description": "Returns the date and time the ImmutabilityPolicy was updated."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "update",
   "name": "Update",
   "objectDefinition": {
    "type": "Reference",
    "referenceName": "ImmutabilityPolicyUpdateType"
   },
   "optional": true,
   "required": false,
   "description": "The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend."
  },
  {
   "containsDiscriminatedTypeValue": false,
   "jsonName": "upn",
   "name": "Upn",
   "objectDefinition": {
    "type": "String",
    "referenceName": null
   },
   "optional": true,
   "required": false,
   "description": "Returns the User Principal Name of the user who updated the ImmutabilityPolicy."
  }
 ]
}