{
  "name": "ApplicationGatewayRewriteRuleCondition",
  "fields": [
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.",
      "jsonName": "ignoreCase",
      "name": "IgnoreCase",
      "objectDefinition": {
        "type": "Boolean",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Setting this value as truth will force to check the negation of the condition given by the user.",
      "jsonName": "negate",
      "name": "Negate",
      "objectDefinition": {
        "type": "Boolean",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.",
      "jsonName": "pattern",
      "name": "Pattern",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The condition parameter of the RewriteRuleCondition.",
      "jsonName": "variable",
      "name": "Variable",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    }
  ],
  "IsParent": false
}