{
  "name": "DatabaseUpdateProperties",
  "fields": [
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
      "jsonName": "autoPauseDelay",
      "name": "AutoPauseDelay",
      "objectDefinition": {
        "type": "Integer",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Collation of the metadata catalog.",
      "jsonName": "catalogCollation",
      "name": "CatalogCollation",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "CatalogCollationType",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The collation of the database.",
      "jsonName": "collation",
      "name": "Collation",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
      "jsonName": "createMode",
      "name": "CreateMode",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "CreateMode",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "dateFormat": "RFC3339",
      "description": "The creation date of the database (ISO8601 format).",
      "jsonName": "creationDate",
      "name": "CreationDate",
      "objectDefinition": {
        "type": "DateTime",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The storage account type used to store backups for this database.",
      "jsonName": "currentBackupStorageRedundancy",
      "name": "CurrentBackupStorageRedundancy",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "BackupStorageRedundancy",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The current service level objective name of the database.",
      "jsonName": "currentServiceObjectiveName",
      "name": "CurrentServiceObjectiveName",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "jsonName": "currentSku",
      "name": "CurrentSku",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "Sku",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The ID of the database.",
      "jsonName": "databaseId",
      "name": "DatabaseId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The default secondary region for this database.",
      "jsonName": "defaultSecondaryLocation",
      "name": "DefaultSecondaryLocation",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "dateFormat": "RFC3339",
      "description": "This records the earliest start date and time that restore is available for this database (ISO8601 format).",
      "jsonName": "earliestRestoreDate",
      "name": "EarliestRestoreDate",
      "objectDefinition": {
        "type": "DateTime",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The resource identifier of the elastic pool containing this database.",
      "jsonName": "elasticPoolId",
      "name": "ElasticPoolId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The azure key vault URI of the database if it's configured with per Database Customer Managed Keys.",
      "jsonName": "encryptionProtector",
      "name": "EncryptionProtector",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The flag to enable or disable auto rotation of database encryption protector AKV key.",
      "jsonName": "encryptionProtectorAutoRotation",
      "name": "EncryptionProtectorAutoRotation",
      "objectDefinition": {
        "type": "Boolean",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Failover Group resource identifier that this database belongs to.",
      "jsonName": "failoverGroupId",
      "name": "FailoverGroupId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The Client id used for cross tenant per database CMK scenario",
      "jsonName": "federatedClientId",
      "name": "FederatedClientId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Specifies the behavior when monthly free limits are exhausted for the free database.\r\n\r\nAutoPause: The database will be auto paused upon exhaustion of free limits for remainder of the month.\r\n\r\nBillForUsage: The database will continue to be online upon exhaustion of free limits and any overage will be billed.",
      "jsonName": "freeLimitExhaustionBehavior",
      "name": "FreeLimitExhaustionBehavior",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "FreeLimitExhaustionBehavior",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The number of secondary replicas associated with the Business Critical, Premium, or Hyperscale edition database that are used to provide high availability. Not applicable to a Hyperscale database within an elastic pool.",
      "jsonName": "highAvailabilityReplicaCount",
      "name": "HighAvailabilityReplicaCount",
      "objectDefinition": {
        "type": "Integer",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Infra encryption is enabled for this database.",
      "jsonName": "isInfraEncryptionEnabled",
      "name": "IsInfraEncryptionEnabled",
      "objectDefinition": {
        "type": "Boolean",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created.",
      "jsonName": "isLedgerOn",
      "name": "IsLedgerOn",
      "objectDefinition": {
        "type": "Boolean",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The resource ids of the user assigned identities to use",
      "jsonName": "keys",
      "name": "Keys",
      "objectDefinition": {
        "type": "Dictionary",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null,
        "nestedItem": {
          "type": "Reference",
          "nullable": false,
          "referenceName": "DatabaseKey",
          "referenceNameIsCommonType": null
        }
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.",
      "jsonName": "licenseType",
      "name": "LicenseType",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "DatabaseLicenseType",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
      "jsonName": "longTermRetentionBackupResourceId",
      "name": "LongTermRetentionBackupResourceId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur.",
      "jsonName": "maintenanceConfigurationId",
      "name": "MaintenanceConfigurationId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Whether or not customer controlled manual cutover needs to be done during Update Database operation to Hyperscale tier.\r\n\r\nThis property is only applicable when scaling database from Business Critical/General Purpose/Premium/Standard tier to Hyperscale tier.\r\n\r\nWhen manualCutover is specified, the scaling operation will wait for user input to trigger cutover to Hyperscale database.\r\n\r\nTo trigger cutover, please provide 'performCutover' parameter when the Scaling operation is in Waiting state.",
      "jsonName": "manualCutover",
      "name": "ManualCutover",
      "objectDefinition": {
        "type": "Boolean",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The max log size for this database.",
      "jsonName": "maxLogSizeBytes",
      "name": "MaxLogSizeBytes",
      "objectDefinition": {
        "type": "Integer",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The max size of the database expressed in bytes.",
      "jsonName": "maxSizeBytes",
      "name": "MaxSizeBytes",
      "objectDefinition": {
        "type": "Integer",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Minimal capacity that database will always have allocated, if not paused",
      "jsonName": "minCapacity",
      "name": "MinCapacity",
      "objectDefinition": {
        "type": "Float",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "dateFormat": "RFC3339",
      "description": "The date when database was paused by user configuration or action(ISO8601 format). Null if the database is ready.",
      "jsonName": "pausedDate",
      "name": "PausedDate",
      "objectDefinition": {
        "type": "DateTime",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "To trigger customer controlled manual cutover during the wait state while Scaling operation is in progress.\r\n\r\nThis property parameter is only applicable for scaling operations that are initiated along with 'manualCutover' parameter.\r\n\r\nThis property is only applicable when scaling database from Business Critical/General Purpose/Premium/Standard tier to Hyperscale tier is already in progress.\r\n\r\nWhen performCutover is specified, the scaling operation will trigger cutover and perform role-change to Hyperscale database.",
      "jsonName": "performCutover",
      "name": "PerformCutover",
      "objectDefinition": {
        "type": "Boolean",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Type of enclave requested on the database i.e. Default or VBS enclaves.",
      "jsonName": "preferredEnclaveType",
      "name": "PreferredEnclaveType",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "AlwaysEncryptedEnclaveType",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. Not applicable to a Hyperscale database within an elastic pool.",
      "jsonName": "readScale",
      "name": "ReadScale",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "DatabaseReadScale",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The resource identifier of the recoverable database associated with create operation of this database.",
      "jsonName": "recoverableDatabaseId",
      "name": "RecoverableDatabaseId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The resource identifier of the recovery point associated with create operation of this database.",
      "jsonName": "recoveryServicesRecoveryPointId",
      "name": "RecoveryServicesRecoveryPointId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The storage account type to be used to store backups for this database.",
      "jsonName": "requestedBackupStorageRedundancy",
      "name": "RequestedBackupStorageRedundancy",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "BackupStorageRedundancy",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The requested service level objective name of the database.",
      "jsonName": "requestedServiceObjectiveName",
      "name": "RequestedServiceObjectiveName",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
      "jsonName": "restorableDroppedDatabaseId",
      "name": "RestorableDroppedDatabaseId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "dateFormat": "RFC3339",
      "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
      "jsonName": "restorePointInTime",
      "name": "RestorePointInTime",
      "objectDefinition": {
        "type": "DateTime",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "dateFormat": "RFC3339",
      "description": "The date when database was resumed by user action or database login (ISO8601 format). Null if the database is paused.",
      "jsonName": "resumedDate",
      "name": "ResumedDate",
      "objectDefinition": {
        "type": "DateTime",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The name of the sample schema to apply when creating this database.",
      "jsonName": "sampleName",
      "name": "SampleName",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "SampleName",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The secondary type of the database if it is a secondary.  Valid values are Geo, Named and Standby.",
      "jsonName": "secondaryType",
      "name": "SecondaryType",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "SecondaryType",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "dateFormat": "RFC3339",
      "description": "Specifies the time that the database was deleted.",
      "jsonName": "sourceDatabaseDeletionDate",
      "name": "SourceDatabaseDeletionDate",
      "objectDefinition": {
        "type": "DateTime",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The resource identifier of the source database associated with create operation of this database.",
      "jsonName": "sourceDatabaseId",
      "name": "SourceDatabaseId",
      "objectDefinition": {
        "type": "String",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "The status of the database.",
      "jsonName": "status",
      "name": "Status",
      "objectDefinition": {
        "type": "Reference",
        "nullable": false,
        "referenceName": "DatabaseStatus",
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Whether or not the database uses free monthly limits. Allowed on one database in a subscription.",
      "jsonName": "useFreeLimit",
      "name": "UseFreeLimit",
      "objectDefinition": {
        "type": "Boolean",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    },
    {
      "containsDiscriminatedTypeValue": false,
      "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
      "jsonName": "zoneRedundant",
      "name": "ZoneRedundant",
      "objectDefinition": {
        "type": "Boolean",
        "nullable": false,
        "referenceName": null,
        "referenceNameIsCommonType": null
      },
      "optional": true,
      "readOnly": false,
      "required": false,
      "sensitive": false
    }
  ],
  "IsParent": false
}