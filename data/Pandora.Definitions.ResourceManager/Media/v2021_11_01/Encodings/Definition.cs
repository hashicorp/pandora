using System.Collections.Generic;
using Pandora.Definitions.Interfaces;


// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See NOTICE.txt in the project root for license information.


namespace Pandora.Definitions.ResourceManager.Media.v2021_11_01.Encodings;

internal class Definition : ResourceDefinition
{
    public string Name => "Encodings";
    public IEnumerable<Interfaces.ApiOperation> Operations => new List<Interfaces.ApiOperation>
    {
        new JobsCancelJobOperation(),
        new JobsCreateOperation(),
        new JobsDeleteOperation(),
        new JobsGetOperation(),
        new JobsListOperation(),
        new JobsUpdateOperation(),
        new TransformsCreateOrUpdateOperation(),
        new TransformsDeleteOperation(),
        new TransformsGetOperation(),
        new TransformsListOperation(),
        new TransformsUpdateOperation(),
    };
    public IEnumerable<System.Type> Constants => new List<System.Type>
    {
        typeof(AacAudioProfileConstant),
        typeof(AnalysisResolutionConstant),
        typeof(AttributeFilterConstant),
        typeof(AudioAnalysisModeConstant),
        typeof(BlurTypeConstant),
        typeof(ChannelMappingConstant),
        typeof(ComplexityConstant),
        typeof(DeinterlaceModeConstant),
        typeof(DeinterlaceParityConstant),
        typeof(EncoderNamedPresetConstant),
        typeof(EntropyModeConstant),
        typeof(FaceRedactorModeConstant),
        typeof(H264ComplexityConstant),
        typeof(H264RateControlModeConstant),
        typeof(H264VideoProfileConstant),
        typeof(H265ComplexityConstant),
        typeof(H265VideoProfileConstant),
        typeof(InsightsTypeConstant),
        typeof(InterleaveOutputConstant),
        typeof(JobErrorCategoryConstant),
        typeof(JobErrorCodeConstant),
        typeof(JobRetryConstant),
        typeof(JobStateConstant),
        typeof(OnErrorTypeConstant),
        typeof(PriorityConstant),
        typeof(RotationConstant),
        typeof(StretchModeConstant),
        typeof(TrackAttributeConstant),
        typeof(VideoSyncModeConstant),
    };
    public IEnumerable<System.Type> Models => new List<System.Type>
    {
        typeof(AacAudioModel),
        typeof(AbsoluteClipTimeModel),
        typeof(AudioModel),
        typeof(AudioAnalyzerPresetModel),
        typeof(AudioOverlayModel),
        typeof(AudioTrackDescriptorModel),
        typeof(BuiltInStandardEncoderPresetModel),
        typeof(ClipTimeModel),
        typeof(CodecModel),
        typeof(CopyAudioModel),
        typeof(CopyVideoModel),
        typeof(DeinterlaceModel),
        typeof(FaceDetectorPresetModel),
        typeof(FiltersModel),
        typeof(FormatModel),
        typeof(FromAllInputFileModel),
        typeof(FromEachInputFileModel),
        typeof(H264LayerModel),
        typeof(H264VideoModel),
        typeof(H265LayerModel),
        typeof(H265VideoModel),
        typeof(ImageModel),
        typeof(ImageFormatModel),
        typeof(InputDefinitionModel),
        typeof(InputFileModel),
        typeof(JobModel),
        typeof(JobErrorModel),
        typeof(JobErrorDetailModel),
        typeof(JobInputModel),
        typeof(JobInputAssetModel),
        typeof(JobInputClipModel),
        typeof(JobInputHTTPModel),
        typeof(JobInputSequenceModel),
        typeof(JobInputsModel),
        typeof(JobOutputModel),
        typeof(JobOutputAssetModel),
        typeof(JobPropertiesModel),
        typeof(JpgFormatModel),
        typeof(Mp4FormatModel),
        typeof(MultiBitrateFormatModel),
        typeof(OutputFileModel),
        typeof(OverlayModel),
        typeof(PngFormatModel),
        typeof(PresetModel),
        typeof(PresetConfigurationsModel),
        typeof(RectangleModel),
        typeof(SelectAudioTrackByAttributeModel),
        typeof(SelectAudioTrackByIdModel),
        typeof(SelectVideoTrackByAttributeModel),
        typeof(SelectVideoTrackByIdModel),
        typeof(StandardEncoderPresetModel),
        typeof(TrackDescriptorModel),
        typeof(TransformModel),
        typeof(TransformOutputModel),
        typeof(TransformPropertiesModel),
        typeof(TransportStreamFormatModel),
        typeof(UtcClipTimeModel),
        typeof(VideoModel),
        typeof(VideoAnalyzerPresetModel),
        typeof(VideoOverlayModel),
        typeof(VideoTrackDescriptorModel),
    };
}
