using System.Collections.Generic;
using Pandora.Definitions.Interfaces;

namespace Pandora.Definitions.ResourceManager.ApiManagement.v2021_08_01;

public partial class Definition : ApiVersionDefinition
{
    public string ApiVersion => "2021-08-01";
    public bool Preview => false;
    public Source Source => Source.ResourceManagerRestApiSpecs;

    public IEnumerable<ResourceDefinition> Resources => new List<ResourceDefinition>
    {
        new Api.Definition(),
        new ApiDiagnostic.Definition(),
        new ApiIssue.Definition(),
        new ApiIssueAttachment.Definition(),
        new ApiIssueComment.Definition(),
        new ApiManagementService.Definition(),
        new ApiManagementServiceSkus.Definition(),
        new ApiOperation.Definition(),
        new ApiOperationPolicy.Definition(),
        new ApiOperationTag.Definition(),
        new ApiOperationsByTag.Definition(),
        new ApiPolicy.Definition(),
        new ApiProduct.Definition(),
        new ApiRelease.Definition(),
        new ApiRevision.Definition(),
        new ApiSchema.Definition(),
        new ApiTag.Definition(),
        new ApiTagDescription.Definition(),
        new ApiVersionSet.Definition(),
        new ApiVersionSets.Definition(),
        new ApisByTag.Definition(),
        new AuthorizationServer.Definition(),
        new Backend.Definition(),
        new BackendReconnect.Definition(),
        new Cache.Definition(),
        new Certificate.Definition(),
        new ContentType.Definition(),
        new ContentTypeContentItem.Definition(),
        new DelegationSettings.Definition(),
        new DeletedService.Definition(),
        new Diagnostic.Definition(),
        new EmailTemplate.Definition(),
        new EmailTemplates.Definition(),
        new Gateway.Definition(),
        new GatewayApi.Definition(),
        new GatewayCertificateAuthority.Definition(),
        new GatewayGenerateToken.Definition(),
        new GatewayHostnameConfiguration.Definition(),
        new GatewayListKeys.Definition(),
        new GatewayRegenerateKey.Definition(),
        new Group.Definition(),
        new GroupUser.Definition(),
        new IdentityProvider.Definition(),
        new Issue.Definition(),
        new Logger.Definition(),
        new NamedValue.Definition(),
        new NetworkStatus.Definition(),
        new Notification.Definition(),
        new NotificationRecipientEmail.Definition(),
        new NotificationRecipientUser.Definition(),
        new OpenidConnectProvider.Definition(),
        new OutboundNetworkDependenciesEndpoints.Definition(),
        new PerformConnectivityCheck.Definition(),
        new Policy.Definition(),
        new PolicyDescription.Definition(),
        new PortalRevision.Definition(),
        new PortalSettings.Definition(),
        new PrivateEndpointConnections.Definition(),
        new Product.Definition(),
        new ProductApi.Definition(),
        new ProductGroup.Definition(),
        new ProductPolicy.Definition(),
        new ProductSubscription.Definition(),
        new ProductTag.Definition(),
        new ProductsByTag.Definition(),
        new QuotaByCounterKeys.Definition(),
        new QuotaByPeriodKeys.Definition(),
        new Region.Definition(),
        new Reports.Definition(),
        new Schema.Definition(),
        new SignInSettings.Definition(),
        new SignUpSettings.Definition(),
        new Skus.Definition(),
        new Subscription.Definition(),
        new Tag.Definition(),
        new TagResource.Definition(),
        new TenantAccess.Definition(),
        new TenantAccessGit.Definition(),
        new TenantConfiguration.Definition(),
        new TenantConfigurationSyncState.Definition(),
        new TenantSettings.Definition(),
        new User.Definition(),
        new UserConfirmationPasswordSend.Definition(),
        new UserGroup.Definition(),
        new UserIdentity.Definition(),
        new UserSubscription.Definition(),
        new UserToken.Definition(),
        new Users.Definition(),
    };
}
